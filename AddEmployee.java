package EmployeeStats;

import java.awt.Color;
import java.awt.Toolkit;
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*  Class:	<b>AddEmployee</b>
*  File:	AddEmployee.java
* <pre>
*  Description:	A form to add a new employee to the database
* gross pay.
*  @author:	Aigerim Shintemirova
*  Environment:	PC, Windows 8, jdk1.7, NetBeans 8.0
*  Date:	4/23/2014
*  @version	1.0
*  @see       	java.awt.Color
*  @see         java.awt.Toolkit
*  </pre>
*  History Log:	Created on April 1, 2014, 1:12:19 AM
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

public class AddEmployee extends javax.swing.JDialog 
{
    private Employee newEmployee;
    private boolean error = false;
    private final Color white = Color.WHITE;
    private final Color pink = Color.PINK;
    final int MAX_HOURS = 168;
    final double MAX_RATE = 10000;

    /**
     * Class: AddEmployee
     * Creates a new form AddEmployee
     * @param parent: java.awt.Frame
     * @param modal: boolean
     */
    public AddEmployee(java.awt.Frame parent, boolean modal) 
    {
        super(parent, modal);
        initComponents();
        this.getRootPane().setDefaultButton(saveJButton);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/EmployeeStats/fish.jpg"));
        setLocationRelativeTo(null);
        nameJTextField.requestFocus();
        newEmployee = null;
        setAlwaysOnTop(true);
        setModal(true);
  
    }

    /**
     * Method: getEmployee()
     * Creates an instance of new employee
     * @return Employee
     */
    public Employee getEmployee()
    {
        return newEmployee;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJPanel = new javax.swing.JPanel();
        titleJLabel = new javax.swing.JLabel();
        logoJLabel = new javax.swing.JLabel();
        displayJPanel = new javax.swing.JPanel();
        nameJLabel = new javax.swing.JLabel();
        hoursJLabel = new javax.swing.JLabel();
        rateJLabel = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        hourJTextField = new javax.swing.JTextField();
        rateJTextField = new javax.swing.JTextField();
        controlJPanel = new javax.swing.JPanel();
        saveJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Employee");
        setResizable(false);

        titleJLabel.setFont(new java.awt.Font("Tempus Sans ITC", 3, 18)); // NOI18N
        titleJLabel.setForeground(new java.awt.Color(153, 0, 204));
        titleJLabel.setText("Add Employee");

        logoJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EmployeeStats/fish.jpg"))); // NOI18N

        javax.swing.GroupLayout titleJPanelLayout = new javax.swing.GroupLayout(titleJPanel);
        titleJPanel.setLayout(titleJPanelLayout);
        titleJPanelLayout.setHorizontalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        titleJPanelLayout.setVerticalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(titleJPanelLayout.createSequentialGroup()
                        .addComponent(titleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addComponent(logoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        nameJLabel.setText("Name of Employee:");

        hoursJLabel.setText("Hours worked:");

        rateJLabel.setText("Rate per hour:");

        nameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameJTextFieldActionPerformed(evt);
            }
        });
        nameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusLost(evt);
            }
        });

        hourJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourJTextFieldActionPerformed(evt);
            }
        });
        hourJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hourJTextFieldFocusLost(evt);
            }
        });

        rateJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateJTextFieldActionPerformed(evt);
            }
        });
        rateJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rateJTextFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout displayJPanelLayout = new javax.swing.GroupLayout(displayJPanel);
        displayJPanel.setLayout(displayJPanelLayout);
        displayJPanelLayout.setHorizontalGroup(
            displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayJPanelLayout.createSequentialGroup()
                .addGroup(displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayJPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(nameJLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rateJLabel)
                        .addComponent(hoursJLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(hourJTextField)
                    .addComponent(rateJTextField))
                .addContainerGap())
        );
        displayJPanelLayout.setVerticalGroup(
            displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayJPanelLayout.createSequentialGroup()
                .addGroup(displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(nameJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hourJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(hoursJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rateJTextField)
                    .addComponent(rateJLabel)))
        );

        saveJButton.setMnemonic('S');
        saveJButton.setText("Save");
        saveJButton.setToolTipText("Saves the newly added employee");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });

        cancelJButton.setMnemonic('C');
        cancelJButton.setText("Cancel");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlJPanelLayout = new javax.swing.GroupLayout(controlJPanel);
        controlJPanel.setLayout(controlJPanelLayout);
        controlJPanelLayout.setHorizontalGroup(
            controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );
        controlJPanelLayout.setVerticalGroup(
            controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlJPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(controlJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(controlJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rateJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateJTextFieldActionPerformed
        // TODO add your handling code here:
        saveJButtonActionPerformed(evt);
    }//GEN-LAST:event_rateJTextFieldActionPerformed
    
    /**
     * Event handler: saveJButtonActionPerformed
     * @param evt 
     * Saves a new employee to the database as well as validates the inputs
     * @param name
     * @param hours
     * @param rate
     * @see Validation
     */
    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
       String name = "";
        float hours = 0;
        float rate = 0;
        
        nameJTextField.setBackground(Color.WHITE);
        hourJTextField.setBackground(Color.WHITE);
        rateJTextField.setBackground(Color.WHITE);
        
        String employeeName = nameJTextField.getText();
        String hrs = hourJTextField.getText();
        String employeeRate = rateJTextField.getText();
        
        if(!Validation.isValidName(employeeName) || employeeName == null)
        {
            nameJTextField.requestFocus();
            error = true;
        }
        else if(!Validation.isDouble(hrs, 0, MAX_HOURS) || hrs == null)
        {
            hourJTextField.requestFocus();
            error = true;
        }
        else if(!Validation.isDouble(employeeRate, 0, MAX_RATE) || employeeRate == null)
        {
            rateJTextField.requestFocus();
            error = true;
        }
        else
        {
            error = false;
        }
        if(!error)
        {
            try
            {
                name = nameJTextField.getText();
                hours = Float.parseFloat(hrs);
                rate = Float.parseFloat(rateJTextField.getText());
                newEmployee = new Employee(name, (int) hours, rate);
                this.dispose();
            }
            catch(NumberFormatException ex)
            {
                throw new RuntimeException("Error parsing input");
            }
        }
    }//GEN-LAST:event_saveJButtonActionPerformed

    /**
     * Event handler: cancelJButtonActionPerformed
     * @param evt 
     * Close the addEmployee dialog
     */
    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelJButtonActionPerformed

    private void nameJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameJTextFieldFocusLost
        // validate the inputs in the jtextfield
        String input = nameJTextField.getText();
        if(Validation.isValidName(input))
            nameJTextField.setBackground(white);
        else if(input == null)
            nameJTextField.setBackground(pink);
        else
            nameJTextField.setBackground(pink);
    }//GEN-LAST:event_nameJTextFieldFocusLost

    private void hourJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hourJTextFieldFocusLost
        // validate the inputs in the jtextfield
        String input = hourJTextField.getText();
        if(Validation.isInteger(input, 0, MAX_HOURS))
            hourJTextField.setBackground(white);
        else if(input == null)
            hourJTextField.setBackground(pink);
        else
            hourJTextField.setBackground(pink);
    }//GEN-LAST:event_hourJTextFieldFocusLost

    private void rateJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rateJTextFieldFocusLost
        // validate the inputs in the jtextfield
        String input = rateJTextField.getText();
        if(Validation.isDouble(input, 0, MAX_RATE))
            rateJTextField.setBackground(white);
        else if(input == null)
            rateJTextField.setBackground(pink);
        else
            rateJTextField.setBackground(pink);
    }//GEN-LAST:event_rateJTextFieldFocusLost

    private void hourJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourJTextFieldActionPerformed
        // save the inputs
        saveJButtonActionPerformed(evt);
    }//GEN-LAST:event_hourJTextFieldActionPerformed

    private void nameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameJTextFieldActionPerformed
        // TODO add your handling code here:
        saveJButtonActionPerformed(evt);
    }//GEN-LAST:event_nameJTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                AddEmployee dialog = new AddEmployee(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelJButton;
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JTextField hourJTextField;
    private javax.swing.JLabel hoursJLabel;
    private javax.swing.JLabel logoJLabel;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JLabel rateJLabel;
    private javax.swing.JTextField rateJTextField;
    private javax.swing.JButton saveJButton;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JPanel titleJPanel;
    // End of variables declaration//GEN-END:variables
}